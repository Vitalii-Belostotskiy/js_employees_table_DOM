{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCKA,IAAM,EAAU,AADF,SAAS,aAAa,CAAC,SACf,gBAAgB,CAAC,MACjC,EAAY,SAAS,aAAa,CAAC,SACnC,EAAO,EAAU,gBAAgB,CAAC,MAExC,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAW,EACb,EACF,GAEA,IAAM,EAAY,SAAU,CAAK,CAAE,CAAO,QAGxC,AACO,WAHM,CAAO,CAAC,EAAM,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,GAI/C,CAAC,EAAQ,OAAO,CAAC,SAAU,IAG3B,CAEb,EACM,EAAa,MAAM,IAAI,CAAC,GAAS,GAAG,CAAC,SAAU,CAAM,EACzD,MAAO,EACT,GAEM,EAAa,SAAU,CAAK,EAChC,IAAM,EAAW,EAAG,EAAU,QAAQ,EAChC,EAAY,CAAU,CAAC,EAAM,EAAI,MACjC,EAAa,AAAc,QAAd,EAAsB,EAAI,GAE7C,EAAQ,IAAI,CAAC,SAAC,CAAA,CAAM,CAApB,EACE,IAAM,EAAQ,EAAK,gBAAgB,CAAC,KAAK,CAAC,EAAM,CAAC,SAAS,CACpD,EAAQ,EAAK,gBAAgB,CAAC,KAAK,CAAC,EAAM,CAAC,SAAS,CACpD,EAAI,EAAU,EAAO,GACrB,EAAI,EAAU,EAAO,GAE3B,OAAQ,CAAA,GACN,KAAK,EAAI,EACP,OAAO,EAAI,CACb,MAAK,EAAI,EACP,OAAO,GAAK,CACd,MAAK,IAAM,EACT,OAAO,CACX,CACF,GAEA,CAAU,CAAC,EAAM,CAAG,AAAc,QAAd,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nvar tableBody = document.querySelector(\"tbody\");\nvar rows = tableBody.querySelectorAll(\"tr\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortColumn(index);\n    });\n});\nvar transform = function transform(index, content) {\n    var type = headers[index].textContent.toLowerCase().trim();\n    switch(type){\n        case \"salary\":\n            return +content.replace(/[\\D]+/g, \"\");\n        case \"string\":\n        default:\n            return content;\n    }\n};\nvar directions = Array.from(headers).map(function(header) {\n    return \"\";\n});\nvar sortColumn = function sortColumn(index) {\n    var newRows = _to_consumable_array(tableBody.children);\n    var direction = directions[index] || \"asc\";\n    var multiplier = direction === \"asc\" ? 1 : -1;\n    newRows.sort(function(rowA, rowB) {\n        var cellA = rowA.querySelectorAll(\"td\")[index].innerHTML;\n        var cellB = rowB.querySelectorAll(\"td\")[index].innerHTML;\n        var a = transform(index, cellA);\n        var b = transform(index, cellB);\n        switch(true){\n            case a > b:\n                return 1 * multiplier;\n            case a < b:\n                return -1 * multiplier;\n            case a === b:\n                return 0;\n        }\n    });\n    directions[index] = direction === \"asc\" ? \"desc\" : \"asc\";\n    rows.forEach(function(row) {\n        tableBody.removeChild(row);\n    });\n    newRows.forEach(function(newRow) {\n        tableBody.appendChild(newRow);\n    });\n};\ntableBody.addEventListener(\"click\", function(e) {\n    var aciveRow = e.target.closest(\"tr\");\n    if (aciveRow) {\n        _to_consumable_array(tableBody.children).forEach(function(row) {\n            row.classList.remove(\"active\");\n        });\n        aciveRow.classList.add(\"active\");\n    }\n});\nvar form = document.createElement(\"form\");\nvar button = document.createElement(\"button\");\nvar datatAtribute = [\n    \"name\",\n    \"position\",\n    \"office\",\n    \"age\",\n    \"salary\"\n];\nvar cities = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nfunction capitalazeFirstLetter(str) {\n    if (str.length === \"\") return str;\n    return str.charAt(0).toUpperCase() + str.slice(1) + \":\";\n}\nfunction addInputsField() {\n    datatAtribute.forEach(function(atribute) {\n        var input = document.createElement(\"input\");\n        var label = document.createElement(\"label\");\n        var select = document.createElement(\"select\");\n        switch(atribute){\n            case \"name\":\n            case \"position\":\n                input.type = \"text\";\n                input.name = atribute;\n                input.dataset.qa = atribute;\n                label.htmlFor = input.id;\n                label.textContent = capitalazeFirstLetter(atribute);\n                form.appendChild(label);\n                label.appendChild(input);\n                break;\n            case \"office\":\n                select.name = atribute;\n                select.required = true;\n                select.dataset.qa = atribute;\n                cities.forEach(function(city) {\n                    var option = document.createElement(\"option\");\n                    option.value = city;\n                    option.textContent = city;\n                    select.appendChild(option);\n                });\n                label.textContent = capitalazeFirstLetter(atribute);\n                form.appendChild(label);\n                label.appendChild(select);\n                break;\n            case \"age\":\n            case \"salary\":\n                input.type = \"number\";\n                input.name = atribute;\n                input.dataset.qa = atribute;\n                label.htmlFor = input.id;\n                label.textContent = capitalazeFirstLetter(atribute);\n                form.appendChild(label);\n                label.appendChild(input);\n                break;\n        }\n    });\n}\nfunction showNotification(text, type) {\n    var notification = document.createElement(\"div\");\n    var notificationMessage = document.createElement(\"span\");\n    notification.setAttribute(\"class\", \"notification\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notificationMessage.setAttribute(\"class\", \"title\");\n    notificationMessage.textContent = text;\n    notification.style.display = \"flex\";\n    notification.style.justifyContent = \"center\";\n    notification.style.alignItems = \"center\";\n    notification.style.textAlign = \"center\";\n    if (type === \"error\") notification.classList.add(\"error\");\n    else notification.classList.add(\"success\");\n    notification.append(notificationMessage);\n    document.body.append(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 5000);\n}\nvar handleAddEployee = function(action) {\n    action.preventDefault();\n    var nameFieldInput = form.querySelector('input[name=\"name\"]');\n    var positionFieldInput = form.querySelector('input[name=\"position\"]');\n    var officeSelectField = form.querySelector('select[name=\"office\"]');\n    var ageFieldInput = form.querySelector('input[name=\"age\"]');\n    var salaryFieldInput = form.querySelector('input[name=\"salary\"]');\n    var warningMessasge = [];\n    if (nameFieldInput.value.trim().length < 4) warningMessasge.push(\"Name should be at least 4 symbols length.\");\n    if (typeof nameFieldInput.value === \"number\") warningMessasge.push(\"Name is incorrect must contain alphabets only\");\n    if (!positionFieldInput.value) warningMessasge.push(\"Position field should be filled.\");\n    if (positionFieldInput.value.trim() === \"\" && positionFieldInput.value) warningMessasge.push(\"Position field should not contain only spaces.\");\n    if (+ageFieldInput.value < 18 || +ageFieldInput.value > 90) warningMessasge.push(\"Age should be between 18 and 90 y.o.\");\n    if (!salaryFieldInput.value) warningMessasge.push(\"Salary field should be filled.\");\n    if (+salaryFieldInput.value < 0) warningMessasge.push(\"Salary field should be a positive number\");\n    if (+salaryFieldInput.value === 0) warningMessasge.push(\"Salary should be bigger then zero\");\n    if (warningMessasge.length > 0) return showNotification(warningMessasge.join(\"\\n\"), \"error\");\n    var newRow = document.createElement(\"tr\");\n    var nameCell = document.createElement(\"td\");\n    var positionCell = document.createElement(\"td\");\n    var officeCell = document.createElement(\"td\");\n    var ageCell = document.createElement(\"td\");\n    var salaryCell = document.createElement(\"td\");\n    nameCell.textContent = nameFieldInput.value;\n    positionCell.textContent = positionFieldInput.value;\n    officeCell.textContent = officeSelectField.value;\n    ageCell.textContent = ageFieldInput.value;\n    salaryCell.textContent = \"$\".concat((+salaryFieldInput.value).toLocaleString(\"en-US\"));\n    newRow.append(nameCell, positionCell, officeCell, ageCell, salaryCell);\n    tableBody.append(newRow);\n    form.reset();\n    return showNotification(\"Employee successfully added.\", \"success\");\n};\naddInputsField();\nbutton.type = \"submit\";\nbutton.textContent = \"Save to table\";\nform.classList.add(\"new-employee-form\");\nform.appendChild(button);\ndocument.body.appendChild(form);\nbutton.addEventListener(\"click\", handleAddEployee);\n\n//# sourceMappingURL=index.74252c0d.js.map\n","'use strict';\n\n// write code here\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tableBody = document.querySelector('tbody');\nconst rows = tableBody.querySelectorAll('tr');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortColumn(index);\n  });\n});\n\nconst transform = function (index, content) {\n  const type = headers[index].textContent.toLowerCase().trim();\n\n  switch (type) {\n    case 'salary':\n      return +content.replace(/[\\D]+/g, '');\n    case 'string':\n    default:\n      return content;\n  }\n};\nconst directions = Array.from(headers).map(function (header) {\n  return '';\n});\n\nconst sortColumn = function (index) {\n  const newRows = [...tableBody.children];\n  const direction = directions[index] || 'asc';\n  const multiplier = direction === 'asc' ? 1 : -1;\n\n  newRows.sort((rowA, rowB) => {\n    const cellA = rowA.querySelectorAll('td')[index].innerHTML;\n    const cellB = rowB.querySelectorAll('td')[index].innerHTML;\n    const a = transform(index, cellA);\n    const b = transform(index, cellB);\n\n    switch (true) {\n      case a > b:\n        return 1 * multiplier;\n      case a < b:\n        return -1 * multiplier;\n      case a === b:\n        return 0;\n    }\n  });\n\n  directions[index] = direction === 'asc' ? 'desc' : 'asc';\n\n  rows.forEach((row) => {\n    tableBody.removeChild(row);\n  });\n\n  newRows.forEach((newRow) => {\n    tableBody.appendChild(newRow);\n  });\n};\n\ntableBody.addEventListener('click', (e) => {\n  const aciveRow = e.target.closest('tr');\n\n  if (aciveRow) {\n    [...tableBody.children].forEach((row) => {\n      row.classList.remove('active');\n    });\n\n    aciveRow.classList.add('active');\n  }\n});\n\nconst form = document.createElement('form');\nconst button = document.createElement('button');\nconst datatAtribute = ['name', 'position', 'office', 'age', 'salary'];\nconst cities = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nfunction capitalazeFirstLetter(str) {\n  if (str.length === '') {\n    return str;\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1) + ':';\n}\n\nfunction addInputsField() {\n  datatAtribute.forEach((atribute) => {\n    const input = document.createElement('input');\n    const label = document.createElement('label');\n    const select = document.createElement('select');\n\n    switch (atribute) {\n      case 'name':\n      case 'position':\n        input.type = 'text';\n        input.name = atribute;\n        input.dataset.qa = atribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalazeFirstLetter(atribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n\n      case 'office':\n        select.name = atribute;\n        select.required = true;\n        select.dataset.qa = atribute;\n\n        cities.forEach((city) => {\n          const option = document.createElement('option');\n\n          option.value = city;\n          option.textContent = city;\n          select.appendChild(option);\n        });\n\n        label.textContent = capitalazeFirstLetter(atribute);\n        form.appendChild(label);\n        label.appendChild(select);\n        break;\n\n      case 'age':\n      case 'salary':\n        input.type = 'number';\n        input.name = atribute;\n        input.dataset.qa = atribute;\n\n        label.htmlFor = input.id;\n        label.textContent = capitalazeFirstLetter(atribute);\n\n        form.appendChild(label);\n        label.appendChild(input);\n        break;\n    }\n  });\n}\n\nfunction showNotification(text, type) {\n  const notification = document.createElement('div');\n  const notificationMessage = document.createElement('span');\n\n  notification.setAttribute('class', 'notification');\n  notification.setAttribute('data-qa', 'notification');\n  notificationMessage.setAttribute('class', 'title');\n  notificationMessage.textContent = text;\n\n  notification.style.display = 'flex';\n  notification.style.justifyContent = 'center';\n  notification.style.alignItems = 'center';\n  notification.style.textAlign = 'center';\n\n  if (type === 'error') {\n    notification.classList.add('error');\n  } else {\n    notification.classList.add('success');\n  }\n\n  notification.append(notificationMessage);\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 5000);\n}\n\nconst handleAddEployee = (action) => {\n  action.preventDefault();\n\n  const nameFieldInput = form.querySelector('input[name=\"name\"]');\n  const positionFieldInput = form.querySelector('input[name=\"position\"]');\n  const officeSelectField = form.querySelector('select[name=\"office\"]');\n  const ageFieldInput = form.querySelector('input[name=\"age\"]');\n  const salaryFieldInput = form.querySelector('input[name=\"salary\"]');\n\n  const warningMessasge = [];\n\n  if (nameFieldInput.value.trim().length < 4) {\n    warningMessasge.push('Name should be at least 4 symbols length.');\n  }\n\n  if (typeof nameFieldInput.value === 'number') {\n    warningMessasge.push('Name is incorrect must contain alphabets only');\n  }\n\n  if (!positionFieldInput.value) {\n    warningMessasge.push('Position field should be filled.');\n  }\n\n  if (positionFieldInput.value.trim() === '' && positionFieldInput.value) {\n    warningMessasge.push('Position field should not contain only spaces.');\n  }\n\n  if (+ageFieldInput.value < 18 || +ageFieldInput.value > 90) {\n    warningMessasge.push('Age should be between 18 and 90 y.o.');\n  }\n\n  if (!salaryFieldInput.value) {\n    warningMessasge.push('Salary field should be filled.');\n  }\n\n  if (+salaryFieldInput.value < 0) {\n    warningMessasge.push('Salary field should be a positive number');\n  }\n\n  if (+salaryFieldInput.value === 0) {\n    warningMessasge.push('Salary should be bigger then zero');\n  }\n\n  if (warningMessasge.length > 0) {\n    return showNotification(warningMessasge.join('\\n'), 'error');\n  }\n\n  const newRow = document.createElement('tr');\n  const nameCell = document.createElement('td');\n  const positionCell = document.createElement('td');\n  const officeCell = document.createElement('td');\n  const ageCell = document.createElement('td');\n  const salaryCell = document.createElement('td');\n\n  nameCell.textContent = nameFieldInput.value;\n  positionCell.textContent = positionFieldInput.value;\n  officeCell.textContent = officeSelectField.value;\n  ageCell.textContent = ageFieldInput.value;\n  salaryCell.textContent = `$${(+salaryFieldInput.value).toLocaleString('en-US')}`;\n\n  newRow.append(nameCell, positionCell, officeCell, ageCell, salaryCell);\n  tableBody.append(newRow);\n\n  form.reset();\n\n  return showNotification('Employee successfully added.', 'success');\n};\n\naddInputsField();\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\nform.classList.add('new-employee-form');\nform.appendChild(button);\ndocument.body.appendChild(form);\nbutton.addEventListener('click', handleAddEployee);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","headers","table","document","querySelector","querySelectorAll","tableBody","rows","forEach","header","index","addEventListener","sortColumn","transform","content","textContent","toLowerCase","trim","replace","directions","map","newRows","children","direction","multiplier","sort","rowA","rowB","cellA","innerHTML","cellB","a","b","row","removeChild","newRow","appendChild","e","aciveRow","target","closest","classList","remove","add","form","createElement","button","cities","capitalazeFirstLetter","str","charAt","toUpperCase","showNotification","text","type","notification","notificationMessage","setAttribute","style","display","justifyContent","alignItems","textAlign","append","body","setTimeout","datatAtribute","atribute","input","label","select","dataset","qa","htmlFor","id","required","city","option","value","action","preventDefault","nameFieldInput","positionFieldInput","officeSelectField","ageFieldInput","salaryFieldInput","warningMessasge","push","join","nameCell","positionCell","officeCell","ageCell","salaryCell","concat","toLocaleString","reset"],"version":3,"file":"index.74252c0d.js.map"}